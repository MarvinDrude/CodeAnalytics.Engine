@page "/"

@using CodeAnalytics.Engine.Contracts.Pipelines.Models
@using CodeAnalytics.Engine.Pipelines.Providers.Overview
@using CodeAnalytics.Engine.Pipelines.Steps.Overview
@using CodeAnalytics.Web.Common.Services.Stats
@using CodeAnalytics.Web.Client.Components.Stats.Graphs
@using CodeAnalytics.Web.Client.Components.Stats

@inject IStatsService StatsService

<PageTitle>Home</PageTitle>

@if (_initialized)
{
   <StatsFilter />
   <div class="main">
      <ArchetypeCountWidget PipeParameters="@_parameters" />
      <LineCountWidget PipeParameters="@_parameters" />
   </div>
}
else
{
   
}

@code {
   
   private ProjectListResult _projects = new ();
   private readonly PipelineParameters _parameters = new ();

   private bool _initialized = false;
   
   protected override async Task OnInitializedAsync()
   {
      _projects = await StatsService.GetStats<ProjectListResult, ProjectListProvider>(_parameters);
      _parameters.Projects = _projects.Projects.Select(x => x.Id).ToHashSet();

      _initialized = true;
   }

}