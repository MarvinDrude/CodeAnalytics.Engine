@using CodeAnalytics.Engine.Contracts.Analyze.Searchers
@using CodeAnalytics.Web.Client.Components.Menus.Bars
@using CodeAnalytics.Web.Client.Models.Search
@using CodeAnalytics.Web.Client.Components.Common.Controls
@using CodeAnalytics.Web.Common.Models.Search
@using CodeAnalytics.Web.Common.Services.Search

@inject ISearchService SearchService

<div class="search" @onclick:stopPropagation="@true">
   <SimpleMenuBar MenuId="@MenuId"></SimpleMenuBar>
   <div class="mode">
      <div class="search-wrapper">
         <div class="header">Mode</div>
         <div class="search-text">
            <InputBox PlaceholderText="Search..." KeyUp="@OnSearchKeyUp" />
         </div>
      </div>
      <div class="modes">
         <a class="selector@(_type is SearchType.Definitions ? " active" : "")"
            @onclick="() => OnSelectType(SearchType.Definitions)">
            Definitions
         </a>
         <a class="selector@(_type is SearchType.Files ? " active" : "")"
            @onclick="() => OnSelectType(SearchType.Files)">
            Files
         </a>
      </div>
   </div>
</div>

@code {
   
   [Parameter]
   public ulong MenuId { get; set; }

   private SearchType _type = SearchType.Definitions;

   private void OnSelectType(SearchType type)
   {
      _type = type;
   }

   private Task OnSearchKeyUp(string text)
   {
      return _type switch
      {
         SearchType.Definitions => OnBasicSearch(text),
         _ => Task.CompletedTask
      };
   }

   private async Task OnBasicSearch(string text)
   {
      var response = await SearchService.GetBasicSearch(new BasicSearchParameters()
      {
         Options = new BaseSearchOptions()
         {
            SearchText = text
         }
      });

      _ = "";
   }
}